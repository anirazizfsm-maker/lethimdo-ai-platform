# Docker Compose for local development and testing

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: alfa_workflow_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - \"5432:5432\"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [\"CMD-SHELL\", \"pg_isready -U postgres\"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (optional - for caching and sessions)
  redis:
    image: redis:7-alpine
    ports:
      - \"6379:6379\"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: [\"CMD\", \"redis-cli\", \"ping\"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      target: backend-production
    ports:
      - \"3001:3001\"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/alfa_workflow_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: development-jwt-secret-change-in-production
      FRONTEND_URL: http://localhost:5173
      OPENAI_API_KEY: ${OPENAI_API_KEY:-demo-key}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-demo-id}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-demo-secret}
      SLACK_CLIENT_ID: ${SLACK_CLIENT_ID:-demo-id}
      SLACK_CLIENT_SECRET: ${SLACK_CLIENT_SECRET:-demo-secret}
      N8N_API_URL: ${N8N_API_URL:-http://n8n:5678/api/v1}
      N8N_API_KEY: ${N8N_API_KEY:-demo-key}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev

  # Frontend (served by Vite in development)
  frontend:
    build:
      context: .
      target: frontend-production
    ports:
      - \"5173:80\"
    environment:
      VITE_API_URL: http://localhost:3001/api
    depends_on:
      - backend

  # n8n Workflow Engine (optional)
  n8n:
    image: n8nio/n8n:latest
    ports:
      - \"5678:5678\"
    environment:
      N8N_BASIC_AUTH_ACTIVE: true
      N8N_BASIC_AUTH_USER: admin
      N8N_BASIC_AUTH_PASSWORD: admin
      WEBHOOK_URL: http://localhost:5678/
      GENERIC_TIMEZONE: UTC
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - \"9090:9090\"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    depends_on:
      - backend

  # Grafana for monitoring dashboards (optional)
  grafana:
    image: grafana/grafana:latest
    ports:
      - \"3000:3000\"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
  n8n_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: alfa-workflow-network", "original_text": "", "replace_all": false}